---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: init-pipeline-context
spec:
  results:
    - name: event-type
      description: The event type from PipelineRun annotations (push, pull_request, etc)
    - name: branch
      description: The branch name from PipelineRun annotations
  steps:
    - name: validate-and-extract
      image: curlimages/curl:latest
      env:
        - name: PR_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['pac.test.appstudio.openshift.io/pull-request']
        - name: EVENT_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['pac.test.appstudio.openshift.io/event-type']
        - name: BRANCH
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['pac.test.appstudio.openshift.io/branch']
      script: |
        #!/bin/sh
        set -e

        echo "[INFO] Checking labels for PR: $PR_NUMBER"
        
        if [ -z "$PR_NUMBER" ]; then
          echo "[INFO] PR_NUMBER is empty. Skipping label check."
          exit 0
        fi

        LABELS=$(curl -s https://api.github.com/repos/project-koku/koku/issues/$PR_NUMBER/labels | grep -o '"name": *"[^"]*"' | cut -d '"' -f4)

        echo "[INFO] PR Labels: $LABELS"

        if echo "$LABELS" | grep -q "run-jenkins-tests"; then
          echo "[INFO] PR labeled to run Jenkins tests. Skipping Tekton pipeline."
          exit 0
        fi

        if echo "$LABELS" | grep -q "smokes-required"; then
          if ! echo "$LABELS" | grep -q "smoke-tests$"; then
            echo "[INFO] Missing required smoke test label with smokes-required."
            exit 1
          fi
        fi

        echo "[INFO] Label check passed."
        
        # Extract event metadata for pipeline notifications
        echo "[INFO] Extracting event metadata..."
        echo "[INFO] EVENT_TYPE: $EVENT_TYPE"
        echo "[INFO] BRANCH: $BRANCH"
        
        # Write to task results
        echo -n "$EVENT_TYPE" > $(results.event-type.path)
        echo -n "$BRANCH" > $(results.branch.path)
        
        exit 0

